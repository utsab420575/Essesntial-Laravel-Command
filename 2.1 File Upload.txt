//Form for file
 <form METHOD="POST" action="{{route('store.profile')}}" enctype="multipart/form-data">
	  @csrf
	  
		<div class="row mb-3">
			<label for="profile_image_button" class="col-sm-2 col-form-label">Profile Image</label>
			<div class="col-sm-10">
				<input  class="form-control" type="file" id="profile_image_button" name="profile_image_button">
				@error('profile_image_button')
					<div class="text-danger mt-2">{{ $message }}</div>
				@enderror
			</div>
		</div>
 </form>
 
 //Validation
		$validated = $request->validate([
            'profile_image_button' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',
        ]);
 




//you can see pdf also

Route::post('/utsab',[RequestController::class,'store_file']);

	public function store_file(Request $request){
        // Validate the request to ensure a file is provided
        $request->validate([
            'photo-file' => 'required|file|max:2048', // Adjust the max size as per your requirements
        ]);

        // Get the uploaded file
        $recive_file = $request->file('photo-file');

        // Define the destination path in the public folder
        //$destinationPath = 'uploads/profilePic';
        $destinationPath = public_path('uploads/profilePic');

        if (!File::exists($destinationPath)) {
            File::makeDirectory($destinationPath, 0755, true);
        }

        // Generate a unique file name to avoid overwriting
        //$fileName = time() . '_' . $recive_file->getClientOriginalName();
        $fileName=time().'.'.$recive_file->getClientOriginalExtension();

        // Move the file to the public/uploads directory
        $recive_file->move(public_path($destinationPath), $fileName);

        // Return a success response with the file path
        return response()->json([
            'success' => true,
            'message' => 'File uploaded successfully!',
            'file_path' => asset($destinationPath . '/' . $fileName),
        ]);

    }


//Day wise file upload
Route::post('/utsab/date',[RequestController::class,'store_day_wise_file']);

	public function store_day_wise_file(Request $request){
        // Validate the request to ensure a file is provided
        $request->validate([
            'photo-file' => 'required|file|max:2048', // Adjust the max size as per your requirements
        ]);

        // Get the uploaded file
        $recive_file = $request->file('photo-file');

        // Create a dynamic folder name based on the current date (e.g., '12_4_2024')
        $dateFolder = date('d_m_Y');
        $destinationPath = public_path('uploads/profilePic/' . $dateFolder);

        // Ensure the directory exists or create it
        if (!File::exists($destinationPath)) {
            File::makeDirectory($destinationPath, 0755, true);
        }

        // Generate a unique file name to avoid overwriting
        $fileName = time() . '_' . $recive_file->getClientOriginalName();

        // Move the file to the dynamically created directory
        $recive_file->move($destinationPath, $fileName);

        // Generate the file's public URL
        $fileUrl = asset('uploads/profilePic/' . $dateFolder . '/' . $fileName);

        // Return a success response with the file path
        return response()->json([
            'success' => true,
            'message' => 'File uploaded successfully!',
            'file_path' => $fileUrl,
        ]);
    }
	
	
	
	
	
	
	
	
	
	
//File Upload Complete Guidline	
 Route::get('/admin/profile','Profile')->name('admin.profile');
 public function StoreProfile(Request $request){
        // Validation
        $validated = $request->validate([
            'profile_image_button' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',
        ]);

       
            try{
				// Check image is selected or not
                if($request->hasFile('profile_image_button')) {
				
					// If the old image exists, delete it first
                    if ($store_data->profile_image && file_exists(public_path('upload/admin_images/' . $store_data->profile_image))) {
                        unlink(public_path('upload/admin_images/' . $store_data->profile_image));
                    }

                    //if selected than recive the image
                    $recive_file = $request->file('profile_image_button');



                    //make file name unique
                    //$fileName = time() . '_' . $recive_file->getClientOriginalName();
                    //here Hmsi_microsecond_imageExtention
                    $timestamp = date('YmdHis'); // Get the current date and time (Year, Month, Day, Hour, Minute, Second)
                    $milliseconds = sprintf('%05d', (int) (microtime(true) * 1000) % 1000); // Get the milliseconds
                    $fileName = $timestamp . '_' . $milliseconds . '_' . $recive_file->getClientOriginalName();


                    // Define the destination path for the uploaded file
                    //make destination path where will file storing
                    $destinationPath = public_path('upload/admin_images');

                    // Create the directory if it doesn't exist
                    if (!file_exists($destinationPath)) {
                        mkdir($destinationPath, 0777, true);
                    }
                    // Move the file to the destination path
                    $recive_file->move($destinationPath,$fileName);

                    //store file name in database
                    $store_data['profile_image']=$fileName;
                }
                //return $store_data;
                $store_data->save();

                return redirect()->route('admin.profile');
            }catch (Exception $e){
                // Log the error
                Log::error('Error updating user profile: ' . $e->getMessage());

                // Redirect with error message
                return redirect()->back()->withErrors('Something went wrong. Please try again later.');
            }
       
    }