public function StorePortfolio(Request $request){
        // Validation rules
        $validatedData = $request->validate([
            'portfolio_name' => 'required|string|max:255',
            'portfolio_title' => 'required|string|max:255',
            'portfolio_description' => 'required|string',
            'portfolio_image_button' => 'nullable|image|mimes:jpg,jpeg,png|max:2048', // Optional but must be an image
        ]);

        try {
            // Check image is selected or not
            if ($request->hasFile('portfolio_image_button')) {
                //if selected than recive the image
                $recive_file = $request->file('portfolio_image_button');

                // create image manager with desired driver
                $manager = new ImageManager(new Driver());

                // read image from file system
                $image = $manager->read($request->file('portfolio_image_button'));

                // resize image proportionally to 300px width
                $image->scale(1020,519);


                //make file name unique
                //$fileName = time() . '_' . $recive_file->getClientOriginalName();
                //here Hmsi_microsecond_imageExtention
                $timestamp = date('YmdHis'); // Get the current date and time (Year, Month, Day, Hour, Minute, Second)
                $milliseconds = sprintf('%05d', (int)(microtime(true) * 1000) % 1000); // Get the milliseconds
                $fileName = $timestamp . '_' . $milliseconds . '_' . $recive_file->getClientOriginalName();


                // Define the destination path for the uploaded file
                //make destination path where will file storing
                //$destinationPath = public_path('upload/home_slide');
                $relativePath = 'upload/portfolio';
                $destinationPath = public_path('upload/portfolio');

                // Create the directory if it doesn't exist
                if (!file_exists($destinationPath)) {
                    mkdir($destinationPath, 0777, true);
                }


                // Move the file to the destination path
                $image->save($destinationPath . DIRECTORY_SEPARATOR . $fileName);

                //store file name in database
                //give in later

            } else {
                $notification = array(
                    'message' => 'No Image Selected',
                    'alert-type' => 'error'
                );
                return redirect()->back()->withErrors($notification);
            }

            Portfolio::create([
               'portfolio_name'=>$request->portfolio_name,
               'portfolio_title'=>$request->portfolio_title,
               'portfolio_description'=>$request->portfolio_description,
               'portfolio_image'=>$relativePath.'/'.$fileName
            ]);

            $notification = array(
                'message' => 'Portfolio Data Updated Successfully',
                'alert-type' => 'success'
            );


            return redirect()->back()->with($notification);

        } catch (Exception $e) {
            // Log the error
            Log::error('Error updating user profile: ' . $e->getMessage());

            // Redirect with error message
            return redirect()->back()->withErrors('Something went wrong. Please try again later.');
        }



    }