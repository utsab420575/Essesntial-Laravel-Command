1.create rout for showing form
Route::get('/about/multi/image','AboutMultiImage')->name('about.multi.image');

2.create route for storing image
Route::post('/store/multi/image','StoreMultiImage')->name('store.multi.image');
 
3.create FORM for storing image(name="about_multi_image_button[]" multiple)

<form METHOD="POST" action="{{route('store.multi.image')}}" enctype="multipart/form-data">
	@csrf

	{{-- Image button --}}
	<div class="row mb-3">
		<label for="about_multi_image_button" class="col-sm-3 col-form-label">About Multi Image</label>
		<div class="col-sm-9">
			<input class="form-control" type="file" id="about_multi_image_button"
				   name="about_multi_image_button[]" multiple>
				@foreach ($errors->get('about_multi_image_button.*') as $fileErrors)
					@foreach ($fileErrors as $error)
						<div class="text-danger mt-2">{{ $error }}</div>
					@endforeach
				@endforeach
		</div>
	</div>

	{{-- Image preview container --}}
	<div class="row mb-3">
		<label for="about_multi_image" class="col-sm-3 col-form-label"></label>
		<div class="col-sm-9">
			<div id="about_multi_image" class="d-flex flex-wrap gap-2">
				{{-- Previewed images will be appended here --}}
			</div>
		</div>
	</div>



	<!-- Input using : 1. You need a simple submit button.
			   2. No additional styling or complex content is required.-->
	{{-- <input type="submit" class="mt-4 btn btn-info btn-rounded waves-effect waves-light" value="Update Profile">--}}

	<!-- button using : You need more flexibility (e.g., including icons, images, or other content inside the button). -->

	<div class="mb-2 mt-4 d-flex justify-content-center">
		<button type="submit" class="btn btn-info btn-rounded waves-effect waves-light"><i
				class="fas fa-edit"></i> Add Images
		</button>
	</div>


	<!-- end row -->

</form>


//script should be added 

<!-- For Showing Image When Select Choose Button -->
    <script>
        $(document).ready(function () {
            // Temporary array to keep track of selected files
            let fileList = [];

            // When the file input changes (i.e., the user selects files)
            $('#about_multi_image_button').on('change', function (e) {
                // Convert the FileList object to an array and get the selected files
                const files = Array.from(e.target.files);

                // Add the new selected files to the fileList array
                fileList = fileList.concat(files);

                // Clear the existing previews to render the updated ones
                $('#about_multi_image').html('');

                // Call function to render the image previews
                renderPreview();
            });

            // Function to render the image previews based on the current fileList
            function renderPreview() {
                // Clear the preview container before rendering the new previews
                $('#about_multi_image').html('');

                // Loop through the files in the fileList array
                fileList.forEach((file, index) => {
                    // Only proceed if the file is an image
                    if (file.type.startsWith('image/')) {
                        // Create a new FileReader to read the selected image file
                        const reader = new FileReader();

                        reader.onload = function (e) {
                            // Create a wrapper div for the image and the close button
                            const wrapper = $('<div>')
                                .addClass('position-relative')
                                .css({
                                    display: 'inline-block',
                                    margin: '5px',
                                    width: '100px',
                                    height: '100px',
                                    border: '1px solid #ddd',
                                    borderRadius: '8px',
                                    overflow: 'hidden',
                                    position: 'relative',
                                });

                            // Create an <img> tag to display the selected image
                            const img = $('<img>')
                                .attr('src', e.target.result)
                                .css({
                                    width: '100%', // Ensures the image fills the wrapper
                                    height: '100%', // Ensures the image fills the wrapper
                                    objectFit: 'cover', // Keeps aspect ratio intact and fills the box
                                });

                            // Create a close button to remove the image
                            const closeBtn = $('<button>')
                                .html('&times;') // HTML for the close symbol (×)
                                .addClass('btn btn-sm btn-danger') // Styling for the close button
                                .css({
                                    position: 'absolute', // Position the button on top-right corner
                                    top: '5px', // 5px from the top
                                    right: '5px', // 5px from the right
                                    borderRadius: '50%', // Make the button circular
                                    lineHeight: '10px', // Center the "×" symbol
                                    width: '20px', // Size of the close button
                                    height: '20px', // Size of the close button
                                    padding: 0, // Remove padding
                                    textAlign: 'center', // Center align the text
                                })
                                .on('click', function () {
                                    // Remove the image from the fileList array
                                    fileList.splice(index, 1);

                                    // Re-render the previews and update the file input
                                    renderPreview();
                                    updateFileInput();
                                });

                            // Append the image and close button to the wrapper
                            wrapper.append(img).append(closeBtn);

                            // Append the wrapper to the preview container
                            $('#about_multi_image').append(wrapper);
                        };

                        // Read the image file as a data URL to display it
                        reader.readAsDataURL(file);
                    }
                });
            }

            // Function to update the file input based on the current fileList
            function updateFileInput() {
                // Create a new DataTransfer object, which can be used to manipulate files
                const dataTransfer = new DataTransfer();

                // Add the remaining files from fileList to the DataTransfer object
                fileList.forEach(file => dataTransfer.items.add(file));

                // Update the file input element with the new file list
                $('#about_multi_image_button')[0].files = dataTransfer.files;

                // Optional: Log the updated file count for debugging purposes
                console.log('Updated file count:', dataTransfer.files.length);
            }
        });
    </script>


4.In Controller

	//for showing form view
	public function AboutMultiImage()
    {
        return view('admin.about_page.multimage');
    }
	
4.Store image data into database

    public function StoreMultiImage(Request $request)
    {
        $validator = Validator::make($request->all(), [
            'about_multi_image_button' => 'required|array',
            'about_multi_image_button.*' => 'image|mimes:jpeg,png,jpg,gif|max:2048',
        ], [
            'about_multi_image_button.required' => 'Please select at least one image.',
            'about_multi_image_button.*.mimes' => 'Invalid file types detected.',
            'about_multi_image_button.*.image' => 'Invalid image files detected.',
        ]);

        if ($validator->fails()) {
            $validator->errors()->add('about_multi_image_button', 'One or more selected files are invalid.');
            return redirect()->back()->withErrors($validator)->withInput();
        }
        try {
            // Check image is selected or not
            if ($request->hasFile('about_multi_image_button')) {
                //retrive single image from all of the image
                foreach ($request->file('about_multi_image_button') as $single_file) {

                    // create image manager with desired driver
                    $manager = new ImageManager(new Driver());

                    // read image from file system
                    $image = $manager->read($single_file);

                    // resize image proportionally to 300px width
                    $image->scale(220, 220);


                    //make file name unique
                    //$fileName = time() . '_' . $recive_file->getClientOriginalName();
                    //here Hmsi_microsecond_imageExtention
                    $timestamp = date('YmdHis'); // Get the current date and time (Year, Month, Day, Hour, Minute, Second)
                    $milliseconds = sprintf('%05d', (int)(microtime(true) * 1000) % 1000); // Get the milliseconds
                    $fileName = $timestamp . '_' . $milliseconds . '_' . $single_file->getClientOriginalName();


                    // Define the destination path for the uploaded file
                    //make destination path where will file storing
                    //$destinationPath = public_path('upload/home_slide');
                    $relativePath = 'upload/multimage';
                    //absolute path for store in directory
                    $destinationPath = public_path('upload/multimage');

                    // Create the directory if it doesn't exist
                    if (!file_exists($destinationPath)) {
                        mkdir($destinationPath, 0777, true);
                    }


                    // Move the file to the destination path
                    $image->save($destinationPath . DIRECTORY_SEPARATOR . $fileName);

                    //store file name in database
                    MultiImage::create([
                        'multi_image'=>$relativePath.'/'.$fileName,
                        'created_at'=>Carbon::now()
                    ]);

                    //feedback message
                    $notification = array(
                        'message' => 'Uploaded Image Successfully',
                        'alert-type' => 'success'
                    );
                }
            } else {
                $notification = array(
                    'message' => 'No Image Uploaded',
                    'alert-type' => 'info'
                );
            }

            //stay in same page and show notification
            return back()->with($notification);

        } catch (Exception $e) {
            // Log the error
            Log::error('Error updating user profile: ' . $e->getMessage());

            // Redirect with error message
            return redirect()->back()->withErrors('Something went wrong. Please try again later.');
        }

    }
	
