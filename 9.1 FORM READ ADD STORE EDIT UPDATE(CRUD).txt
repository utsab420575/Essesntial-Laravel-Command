1.1.Showing data from database (route)
Route::controller(PortfolioController::class)->group(function(){
   Route::get('/all/portfolio','AllPortfolio')->name('all.portfolio');
}

1.2 sending data from controller
	public function AllPortfolio(){
        //ORDER BY created_at DESC
        $allPortfolio=Portfolio::latest()->get();
        return view('admin.portfolio.protfolio_all',['allPortfolio'=>$allPortfolio]);
    }
1.3 data show into datatables view ; in datatables have 'Edit' 'Delete' button
@extends('admin.admin_master')
@section('admin')
    <div class="page-content">
        <div class="container-fluid">

            <!-- start page title -->
            <div class="row">
                <div class="col-12">
                    <div class="page-title-box d-sm-flex align-items-center justify-content-between">
                        <h4 class="mb-sm-0">Portfolio All</h4>
                    </div>
                </div>
            </div>
            <!-- end page title -->


            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-body">

                            <h4 class="card-title">Protfolio All Data</h4>
                            <p class="card-title-desc">
                                All of the multiple images showing from databases
                            </p>

                            <table id="datatable" class="table table-bordered dt-responsive nowrap" style="border-collapse: collapse; border-spacing: 0; width: 100%;">
                                <thead>
                                <tr>
                                    <th>Sl</th>
                                    <th>Protfolio Name</th>
                                    <th>Protfolio Title</th>
                                    <th>Protfolio Image</th>
                                    <th>Action</th>
                                </tr>
                                </thead>


                                <tbody>
                                @php($i=1)
                                @foreach($allPortfolio as $singlePortfolio)
                                    <tr>
                                        <td>{{$i++}}</td>
                                        <td>{{$singlePortfolio->portfolio_name}}</td>
                                        <td>{{$singlePortfolio->portfolio_title}}</td>
                                        <td><img src="{{asset($singlePortfolio->portfolio_image)}}" width="60px" height="50px"></td>
                                        <td>
                                            <a href="{{route('edit.portfolio',$singlePortfolio->id)}}" class="btn btn-info sm"><i class="fas fa-edit"></i></a>

                                            <a href="{{{route('delete.portfolio',$singlePortfolio->id)}}" class="btn btn-danger delete sm"><i class="fas fa-trash-alt"></i></a>
                                        </td>
                                    </tr>
                                @endforeach
                                </tbody>
                            </table>

                        </div>
                    </div>
                </div> <!-- end col -->
            </div> <!-- end row -->
        </div>
    </div>
@endsection



-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2.1. Now work for add data into database(1.one route for showing data and 2.another for storing into database)
Route::controller(PortfolioController::class)->group(function(){
   Route::get('/add/portfolio', 'AddPortfolio')->name('add.portfolio');
   Route::post('/store/portfolio','StorePortfolio')->name('store.portfolio');
}

2.2. working for add/portfolio
sending data into view from controller

	public function AddPortfolio(){
        return view('admin.portfolio.portfolio_add');
    }

2.3. making view
@extends('admin.admin_master')
@section('admin')
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <div class="page-content">
        <div class="container-fluid">
            {{--<div class="row justify-content-center">--}}
            <div class="row">
                <div class="col-6">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-title">Portfolio Page</h4><br><br>
                            <!-- multipart/form-data is necessary when your form includes file inputs.
                            It ensures that the file data and other form fields are sent as separate parts in the HTTP request.-->
                            <form method="POST" action="{{ route('store.portfolio') }}" enctype="multipart/form-data">
                                @csrf

                                {{-- Portfolio Name --}}
                                <div class="row mb-3">
                                    <label for="portfolio_name" class="col-sm-2 col-form-label">Portfolio Name</label>
                                    <div class="col-sm-10">
                                        <input class="form-control" type="text" value="{{ old('portfolio_name') }}" id="portfolio_name" name="portfolio_name">
                                        @error('portfolio_name')
                                        <div class="text-danger mt-2">{{ $message }}</div>
                                        @enderror
                                    </div>
                                </div>

                                {{-- Portfolio Title --}}
                                <div class="row mb-3">
                                    <label for="portfolio_title" class="col-sm-2 col-form-label">Portfolio Title</label>
                                    <div class="col-sm-10">
                                        <input class="form-control" type="text" value="{{ old('portfolio_title') }}" id="portfolio_title" name="portfolio_title">
                                        @error('portfolio_title')
                                        <div class="text-danger mt-2">{{ $message }}</div>
                                        @enderror
                                    </div>
                                </div>

                                {{-- Long Description --}}
                                <div class="row mb-3">
                                    <label for="portfolio_description" class="col-sm-2 col-form-label">Long Description</label>
                                    <div class="col-sm-10">
                                        <textarea id="elm1" name="portfolio_description">{{ old('portfolio_description') }}</textarea>
                                        @error('portfolio_description')
                                        <div class="text-danger mt-2">{{ $message }}</div>
                                        @enderror
                                    </div>
                                </div>

                                {{-- Portfolio Image Button --}}
                                <div class="row mb-3">
                                    <label for="portfolio_image_button" class="col-sm-2 col-form-label">Portfolio Image</label>
                                    <div class="col-sm-10">
                                        <input class="form-control" type="file" id="portfolio_image_button" name="portfolio_image_button">
                                        @error('portfolio_image_button')
                                        <div class="text-danger mt-2">{{ $message }}</div>
                                        @enderror
                                    </div>
                                </div>

                                {{-- Image Showing --}}
                                <div class="row mb-3">
                                    <label for="portfolio_slider_image" class="col-sm-2 col-form-label"></label>
                                    <div class="col-sm-10">
                                        <img
                                            id="portfolio_slider_image"
                                            class="rounded avatar-lg"
                                            style="width: 200px; height: 200px;"
                                            alt="300x300" data-holder-rendered="true"
                                            {{--src="{{ old('portfolio_image_button') ? asset('upload/portfolio/' . old('portfolio_image_button')) : asset('upload/no_image.jpg') }}">--}}
                                            src="{{asset('upload/no_image.jpg') }}">
                                    </div>
                                </div>

                                {{-- Submit Button --}}
                                <div class="mb-2 mt-4 d-flex justify-content-center">
                                    <button type="submit" class="btn btn-info btn-rounded waves-effect waves-light"><i class="fas fa-edit"></i>Add Portfolio</button>
                                </div>

                            </form>


                        </div>
                    </div>
                </div> <!-- end col -->
            </div>
        </div>
    </div>

    <!-- For Showing Image When Select Choose Button -->
    <script>
        $(document).ready(function () {
            $('#portfolio_image_button').on('change', function (e) {
                // Get the selected file
                var file = e.target.files[0];

                // Check if a file was selected
                if (file) {
                    var reader = new FileReader();

                    // Set the src of the image when the file is loaded
                    reader.onload = function (e) {
                        $('#portfolio_slider_image').attr('src', e.target.result);
                    };

                    // Read the file as a data URL
                    reader.readAsDataURL(file);
                }
            });
        });
    </script>
@endsection


2.4. now work for storing into database

	public function StorePortfolio(Request $request){
       
        // Validation rules
        $validatedData = $request->validate([
            'portfolio_name' => 'required|string|max:255',
            'portfolio_title' => 'required|string|max:255',
            'portfolio_description' => 'required|string',
            'portfolio_image_button' => 'required|image|mimes:jpg,jpeg,png|max:2048', //must be an image
        ]);

        try {
            // Check image is selected or not
            if ($request->hasFile('portfolio_image_button')) {
                //if selected than recive the image
                $recive_file = $request->file('portfolio_image_button');

                // create image manager with desired driver
                $manager = new ImageManager(new Driver());

                // read image from file system
                $image = $manager->read($request->file('portfolio_image_button'));

             
			    // resize image proportionally
				//$image->scale(1020,519);
				//resize image without proportionally
				$image->resize(1020,519);


                //make file name unique
                //$fileName = time() . '_' . $recive_file->getClientOriginalName();
                //here Hmsi_microsecond_imageExtention
                $timestamp = date('YmdHis'); // Get the current date and time (Year, Month, Day, Hour, Minute, Second)
                $milliseconds = sprintf('%05d', (int)(microtime(true) * 1000) % 1000); // Get the milliseconds
                $fileName = $timestamp . '_' . $milliseconds . '_' . $recive_file->getClientOriginalName();


                // Define the destination path for the uploaded file
                //make destination path where will file storing
                //$destinationPath = public_path('upload/home_slide');
                $relativePath = 'upload/portfolio';
                $destinationPath = public_path('upload/portfolio');

                // Create the directory if it doesn't exist
                if (!file_exists($destinationPath)) {
                    mkdir($destinationPath, 0777, true);
                }


                // Move the file to the destination path
                $image->save($destinationPath . DIRECTORY_SEPARATOR . $fileName);

                //store file name in database
                //give in later

            } else {
                $notification = array(
                    'message' => 'No Image Selected',
                    'alert-type' => 'error'
                );
                return redirect()->back()->withErrors($notification);
            }

            //return $request->all();
            Portfolio::create([
               'portfolio_name'=>$request->portfolio_name,
               'portfolio_title'=>$request->portfolio_title,
               'portfolio_description'=>$request->portfolio_description,
               'portfolio_image'=>$relativePath.'/'.$fileName,
                'created_at'=>Carbon::now()
            ]);

            $notification = array(
                'message' => 'Portfolio Data Updated Successfully',
                'alert-type' => 'success'
            );


            return redirect()->back()->with($notification);

        } catch (Exception $e) {
            // Log the error
            Log::error('Error updating user profile: ' . $e->getMessage());

            // Redirect with error message
            return redirect()->back()->withErrors('Something went wrong. Please try again later.');
        }
    }




----------------------------------------------------------------------------------------------------------------------------------------------------
3.1. now we work for edit (two route: 1.for showing data 2.for udpate into database)
Route::controller(PortfolioController::class)->group(function(){
   Route::get('/edit/portfolio/{id}','EditPortfolio')->name('edit.portfolio');
   Route::post('/update/portfolio','UpdatePortfolio')->name('update.portfolio');
});

3.2. now showing data into view; send data from controller
	public function EditPortfolio($id){
        $portfolio_data=Portfolio::find($id);
       // return $portfolio_data;
        if($portfolio_data){
            return view('admin.portfolio.portfolio_edit',['portfolio_data'=>$portfolio_data]);
        }else{
            return redirect()->back()->withErrors('Data Not Available');
        }
    }

3.3 now show making view
@extends('admin.admin_master')
@section('admin')
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <div class="page-content">
        <div class="container-fluid">
            {{--<div class="row justify-content-center">--}}
            <div class="row">
                <div class="col-6">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-title">Portfolio Page</h4><br><br>
                            <!-- multipart/form-data is necessary when your form includes file inputs.
                            It ensures that the file data and other form fields are sent as separate parts in the HTTP request.-->
                            <form method="POST" action="{{ route('update.portfolio') }}" enctype="multipart/form-data">
                                @csrf

                                <input type="hidden" name="id" value="{{$portfolio_data->id}}">

                                {{-- Portfolio Name --}}
                                <div class="row mb-3">
                                    <label for="portfolio_name" class="col-sm-2 col-form-label">Portfolio Name</label>
                                    <div class="col-sm-10">
                                        <input class="form-control" type="text" value="{{$portfolio_data->portfolio_name}}" id="portfolio_name" name="portfolio_name">
                                        @error('portfolio_name')
                                        <div class="text-danger mt-2">{{ $message }}</div>
                                        @enderror
                                    </div>
                                </div>

                                {{-- Portfolio Title --}}
                                <div class="row mb-3">
                                    <label for="portfolio_title" class="col-sm-2 col-form-label">Portfolio Title</label>
                                    <div class="col-sm-10">
                                        <input class="form-control" type="text" value="{{ $portfolio_data->portfolio_title }}" id="portfolio_title" name="portfolio_title">
                                        @error('portfolio_title')
                                        <div class="text-danger mt-2">{{ $message }}</div>
                                        @enderror
                                    </div>
                                </div>

                                {{-- Long Description --}}
                                <div class="row mb-3">
                                    <label for="portfolio_description" class="col-sm-2 col-form-label">Long Description</label>
                                    <div class="col-sm-10">
                                        <textarea id="elm1" name="portfolio_description">{{ $portfolio_data->portfolio_description }}</textarea>
                                        @error('portfolio_description')
                                        <div class="text-danger mt-2">{{ $message }}</div>
                                        @enderror
                                    </div>
                                </div>

                                {{-- Portfolio Image Button --}}
                                <div class="row mb-3">
                                    <label for="portfolio_image_button" class="col-sm-2 col-form-label">Portfolio Image</label>
                                    <div class="col-sm-10">
                                        <input class="form-control" type="file" id="portfolio_image_button" name="portfolio_image_button">
                                        @error('portfolio_image_button')
                                        <div class="text-danger mt-2">{{ $message }}</div>
                                        @enderror
                                    </div>
                                </div>

                                {{-- Image Showing --}}
                                <div class="row mb-3">
                                    <label for="portfolio_slider_image" class="col-sm-2 col-form-label"></label>
                                    <div class="col-sm-10">
                                        <img
                                            id="portfolio_slider_image"
                                            class="rounded avatar-lg"
                                            style="width: 200px; height: 200px;"
                                            alt="300x300" data-holder-rendered="true"
                                            src="{{ empty($portfolio_data->portfolio_image) ? url('upload/no_image.jpg') : asset($portfolio_data->portfolio_image) }}">
                                    </div>
                                </div>

                                {{-- Submit Button --}}
                                <div class="mb-2 mt-4 d-flex justify-content-center">
                                    <button type="submit" class="btn btn-info btn-rounded waves-effect waves-light"><i class="fas fa-edit"></i>Update Portfolio</button>
                                </div>

                            </form>


                        </div>
                    </div>
                </div> <!-- end col -->
            </div>
        </div>
    </div>

    <!-- For Showing Image When Select Choose Button -->
    <script>
        $(document).ready(function () {
            $('#portfolio_image_button').on('change', function (e) {
                // Get the selected file
                var file = e.target.files[0];

                // Check if a file was selected
                if (file) {
                    var reader = new FileReader();

                    // Set the src of the image when the file is loaded
                    reader.onload = function (e) {
                        $('#portfolio_slider_image').attr('src', e.target.result);
                    };

                    // Read the file as a data URL
                    reader.readAsDataURL(file);
                }
            });
        });
    </script>
@endsection


3.3 now update into database

	public function UpdatePortfolio(Request $request){
        $validatedData = $request->validate([
            'portfolio_name' => 'required|string|max:255',
            'portfolio_title' => 'required|string|max:255',
            'portfolio_description' => 'required|string',
            'portfolio_image_button' => 'nullable|image|mimes:jpg,jpeg,png|max:2048', //must be an image(if no image selected than no change into database)
        ]);

        $portfolio_retrive_id=$request->id;
        $portfolio_data=Portfolio::find($portfolio_retrive_id);
        if ($portfolio_data) {
            //store data into database/update into databasae
            $portfolio_data->portfolio_name = $request->portfolio_name;
            $portfolio_data->portfolio_title = $request->portfolio_title;
            $portfolio_data->portfolio_description = $request->portfolio_description;

            try {
                // Check image is selected or not
                if ($request->hasFile('portfolio_image_button')) {

                    // If the old image exists, delete it first
					//$$portfolio_data->portfolio_image here checking database image field have image 
					//if image having in database than delete image
                    if ($portfolio_data->portfolio_image && file_exists(public_path($portfolio_data->portfolio_image))) {
                        unlink(public_path($portfolio_data->portfolio_image));
                    }

                    //if selected than recive the image
                    $recive_file = $request->file('portfolio_image_button');

                    // create image manager with desired driver
                    $manager = new ImageManager(new Driver());

                    // read image from file system
                    $image = $manager->read($request->file('portfolio_image_button'));

                    // resize image proportionally
                    //$image->scale(1020,519);
                    //resize image without proportionally
                    $image->resize(1020,519);


                    //make file name unique
                    //$fileName = time() . '_' . $recive_file->getClientOriginalName();
                    //here Hmsi_microsecond_imageExtention
                    $timestamp = date('YmdHis'); // Get the current date and time (Year, Month, Day, Hour, Minute, Second)
                    $milliseconds = sprintf('%05d', (int)(microtime(true) * 1000) % 1000); // Get the milliseconds
                    $fileName = $timestamp . '_' . $milliseconds . '_' . $recive_file->getClientOriginalName();


                    // Define the destination path for the uploaded file
                    //make destination path where will file storing
                    //$destinationPath = public_path('upload/home_slide');
                    $relativePath = 'upload/portfolio';
                    $destinationPath = public_path('upload/portfolio');

                    // Create the directory if it doesn't exist
                    if (!file_exists($destinationPath)) {
                        mkdir($destinationPath, 0777, true);
                    }


                    // Move the file to the destination path
                    $image->save($destinationPath . DIRECTORY_SEPARATOR . $fileName);

                    //store file name in database
                    $portfolio_data['portfolio_image'] = $relativePath . '/' . $fileName;

                    //feedback message
                    $notification = array(
                        'message' => 'Portfolio Page Updated with Image Successfully',
                        'alert-type' => 'info'
                    );
                } else {
                    $notification = array(
                        'message' => 'Portfolio Page Updated without Image Successfully',
                        'alert-type' => 'info'
                    );
                }
                //return $store_data;
                $portfolio_data->save();

               //return back()->with($notification);
                return redirect()->route('all.portfolio')->with($notification);

            } catch (Exception $e) {
                // Log the error
                Log::error('Error updating Portfolio: ' . $e->getMessage());

                // Redirect with error message
                return redirect()->back()->withErrors('Something went wrong. Please try again later.');
            }

        } else {
            return back()->with([
                'message' => 'Database is empty please insert first data from admin',
                'alert-type' => 'info',
            ]);
        }


    }